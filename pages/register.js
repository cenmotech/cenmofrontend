import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useState, useContext } from 'react'
import AuthenticationContext from '../context/AuthenticationContext'
import axios from 'axios'
import { useRouter } from 'next/router'
import Link from 'next/link'
import { useRef } from 'react'

import { Input, Text, initialRef, Button, onClose, 
    isError, input, handleInputChange, InputGroup, 
    InputRightElement, NumberInput, NumberInputField,
    NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper,
    useToast, Card, CardHeader, CardBody, CardFooter, Heading, Highlight,
    Box, FormControl,FormLabel, FormErrorMessage, FormHelperText, Stack, } from '@chakra-ui/react'

export default function Register() {

  const [email, setEmail] = useState('')
  const [name, setName] = useState('')
  const [phone, setPhone] = useState('')
  const [password, setPassword] = useState('')

  //const router = useRouter()

  const {register} = useContext(AuthenticationContext)

  const toast = useToast()
  const toastIdRef = useRef()

  const submitHandler = e => {
  	e.preventDefault();
    console.log({name, email, password, phone})

    if (email.match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/) ){
      console.log('Email valid.')
      register({name, email, password, phone})
    } else {
      console.log('Email tidak valid.')
      toastIdRef.current = toast({ description: 'Email Anda tidak valid.' })
    }
  }

  // Email
  const [input, setInput] = useState(false)
  const handleInputChange = (e) => setInput(e.target.value)
  const isError = input === ''

  // Password
  const [show, setShow] = useState(false)
  const handleClick = () => setShow(!show)

  return (
      <>
      <div className={styles.container}>
          <Head>
              <title>Cenmo</title>
              <meta name="description" content="Generated by create next app" />
              <link rel="icon" href="/favicon.ico" />
          </Head>
      
      <main className={styles.main}>
      <Heading pb={3} lineHeight='tall'>
          <Highlight
              query='Register'
              styles={{ px: '2', py: '1', rounded: 'full', bg: 'blue.100' }}
          >
              Register
          </Highlight>
      </Heading>
      <Text>we can't wait to meet you!</Text>
      <br/>
      <Card>
          <CardBody>
            <form onSubmit={submitHandler}>
              <FormControl isInvalid={isError}>
                  <FormLabel>Email address</FormLabel>
                  <Input label='Email' type='email' fullwidth="true" onChange={e => setEmail(e.target.value)} value={email} placeholder='ex: michael.jordan@gmail.com'/>
                  {!isError ? (
                    <FormHelperText>
                     
                    </FormHelperText>
                  ) : (
                    <FormErrorMessage>Email is required.</FormErrorMessage>
                  )}
              </FormControl>
              <br/>
              <FormControl>
                  <FormLabel>Full name</FormLabel>
                  <Input label='Full_name' fullwidth="true" onChange={e => setName(e.target.value)} value={name} placeholder='ex: Michael Jordan'/>
              </FormControl>
              <br/>
              <FormControl>
                  <FormLabel>Mobile number</FormLabel>
                  <Input label='No_HP' fullwidth="true" onChange={e => setPhone(e.target.value)} value={phone} type='number' placeholder='ex: 0851xxx'/>
              </FormControl>
              <br/>
              <FormControl>
                  <FormLabel>Password</FormLabel>
                  <InputGroup size='md' pa={5}>
                      <Input label='Password' fullwidth="true" onChange={e => setPassword(e.target.value)} value={password} 
                          pr='4.5rem'
                          type={show ? 'text' : 'password'}
                          placeholder='Enter password'
                      />
                      <InputRightElement width='4.5rem'>
                          <Button h='1.75rem' size='sm' onClick={handleClick}>
                          {show ? 'Hide' : 'Show'}
                          </Button>
                      </InputRightElement>
                  </InputGroup>
              </FormControl>
              <br/>
              <Button onClick={onClose} mr={3}>
                  Back to Log In
              </Button>
              <Button colorScheme='green' onClick={submitHandler}
                >Register</Button>
            </form>
          </CardBody>
      </Card>
      </main>
      </div>
    </>
  )       
}
